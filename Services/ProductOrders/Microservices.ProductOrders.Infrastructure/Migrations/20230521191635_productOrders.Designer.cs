// <auto-generated />
using System;
using Microservices.ProductOrders.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microservices.ProductOrders.Infrastructure.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20230521191635_productOrders")]
    partial class productOrders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Microservices.ProductOrders.Domain.ProductOrdersAggregate.ProductOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductOrders", "ordering");
                });

            modelBuilder.Entity("Microservices.ProductOrders.Domain.ProductOrdersAggregate.ProductOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductOrderId");

                    b.ToTable("ProductOrderItems", "ordering");
                });

            modelBuilder.Entity("Microservices.ProductOrders.Domain.ProductOrdersAggregate.ProductOrder", b =>
                {
                    b.OwnsOne("Microservices.ProductOrders.Domain.ProductOrdersAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<int>("ProductOrderId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("District")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductOrderId");

                            b1.ToTable("ProductOrders");

                            b1.WithOwner()
                                .HasForeignKey("ProductOrderId");
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Microservices.ProductOrders.Domain.ProductOrdersAggregate.ProductOrderItem", b =>
                {
                    b.HasOne("Microservices.ProductOrders.Domain.ProductOrdersAggregate.ProductOrder", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductOrderId");
                });

            modelBuilder.Entity("Microservices.ProductOrders.Domain.ProductOrdersAggregate.ProductOrder", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
